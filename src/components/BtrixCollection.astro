---
import { bytes, number } from "../helpers/format";

type Props = {
  endpoint?: string;
  org: string;
  collection: string;
  url?: string | undefined;
  index?: number;
};

// partial btrix collection
type Collection = {
  name: string;
  slug: string;
  caption: string;
  thumbnail: {
    name: string;
    path: string;
    hash: string;
    size: 0;
    mime: string;
  };
  pageCount: number;
  totalSize: number;
};

const {
  endpoint = "https://app.browsertrix.com/",
  org,
  collection,
  url,
  index = 0,
} = Astro.props;

// fetch collection
const res = await fetch(
  `${endpoint}api/public/orgs/${org}/collections/${collection}`,
);
const coll = (await res.json()) as Collection;

const href = url ?? `${endpoint}explore/${org}/collections/${collection}`;
const src = {
  src: coll.thumbnail.path,
  width: 640,
  height: 360,
  format: "jpeg",
};

const { name, caption, pageCount, totalSize } = coll;

const delay = `${index * 100}ms`;
---

<a
  href={href}
  target="_blank"
  class="group collection -m-2 rounded-2xl bg-stone-50 p-2 pb-4 ring-1 ring-stone-100/0 transition hover:ring-stone-100"
>
  <div
    class="relative mb-4 rounded-lg bg-slate-50 shadow-lg ring-1 shadow-cyan-700/10 ring-stone-900/20 transition group-hover:shadow-cyan-800/20 group-hover:ring-stone-800/20"
  >
    <img
      class="aspect-video w-full rounded-lg object-cover"
      src={src.src}
      alt=""
    />
  </div>
  <h2
    class="mx-2 text-base leading-tight font-semibold text-stone-700 transition-colors group-hover:text-stone-900"
  >
    {name}
  </h2>
  <p
    class="mx-2 mt-1.5 flex gap-2 text-sm text-stone-600 group-hover:text-stone-800"
  >
    {number(pageCount)} pages <span
      class="font-mono font-thin text-stone-300"
      role="separator">/</span
    >
    {bytes(totalSize)}
  </p>
  <p
    class="mx-2 mt-1.5 text-sm leading-relaxed text-pretty text-stone-400 transition-colors group-hover:text-stone-600"
  >
    <slot>
      {caption}
    </slot>
  </p>
</a>

<style define:vars={{ delay }}>
  @media (prefers-reduced-motion: no-preference) {
    .collection {
      animation: blur-in 700ms var(--ease-out) backwards;
      animation-delay: var(--delay, 0);
    }
  }
  @keyframes blur-in {
    from {
      filter: blur(8px);
      transform: translateX(-2px);
      opacity: 0;
    }
  }
</style>
